name: Default branch

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  getVersion:
    runs-on: ubuntu-latest
    name: Get next version
    outputs:
      tag: ${{ steps.bump_version.outputs.new_tag }}
      version: ${{ steps.bump_version.outputs.new_version }}
      changelog: ${{ steps.bump_version.outputs.changelog }}
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Bump version
        uses: mathieudutour/github-tag-action@v5.6
        id: bump_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}          

  build:
    runs-on: ubuntu-latest
    needs: getVersion
    name: Build and test
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .net
        uses: actions/setup-dotnet@v1.8.1 
        with:
          dotnet-version: 5.0.x
          source-url: https://nuget.pkg.github.com/jonathascosta/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build -c Debug --no-restore -p:Version=${{ needs.getVersion.outputs.version }}
        
      - name: Run unit tests
        run: dotnet test --no-restore

  publish:
    runs-on: ubuntu-latest
    needs: [getVersion, build, devskim, codeql, stryker]
    name: Publish
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .net
        uses: actions/setup-dotnet@v1.8.1 
        with:
          dotnet-version: 5.0.x
          source-url: https://nuget.pkg.github.com/jonathascosta/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build -c Release --no-restore -p:Version=${{ needs.getVersion.outputs.version }}
        
      - name: Create the package
        run: dotnet pack -c Release -o out -p:PackageVersion=${{ needs.getVersion.outputs.version }}

      - name: Publish the package
        run: dotnet nuget push out/*.nupkg --skip-duplicate --no-symbols true

  tag:
    runs-on: ubuntu-latest
    needs: [publish]
    name: Tag and Release
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create a Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.getVersion.outputs.tag }}
          release_name: Release ${{ needs.getVersion.outputs.tag }}
          body: ${{ needs.getVersion.outputs.changelog }}

  devskim:
    name: DevSkim
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1
        
      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: devskim-results.sarif

  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: 'csharp'

    - name: Set up .net
      uses: actions/setup-dotnet@v1.8.1 
      with:
        dotnet-version: 5.0.x      
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build -c Release --no-restore
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  stryker:
    name: Stryker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .net
        uses: actions/setup-dotnet@v1.8.1 
        with:
          dotnet-version: 5.0.x
          source-url: https://nuget.pkg.github.com/jonathascosta/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Set up Stryker
        run: dotnet tool install -g dotnet-stryker
        
      - name: Run Stryker
        run: dotnet-stryker --reporters "['cleartext', 'html']"
        working-directory: ./test/SystemExtensions.Tests
        
      - name: Archive Stryker results
        uses: actions/upload-artifact@v2
        with:
          name: stryker-report
          path: '**/mutation-report.html'
