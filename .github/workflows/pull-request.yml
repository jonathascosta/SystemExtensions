name: Workflow for pull-requests

on:
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Restore, build and test
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Setup .net
        uses: actions/setup-dotnet@v1.8.1 
        with:
          dotnet-version: 5.0.x
          
      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build -c Release --no-restore
        
      - name: Run unit tests
        run: dotnet test --no-restore
          
      - name: Version and Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
        env: 
          VERSION_NUMBER: (${{ steps.tag_version.outputs.new_tag }} | sed 's/[v]//g')
          
      - name: Set Nuget Package Version
        uses: roryprimrose/set-vs-sdk-project-version@v1
        env: 
          VERSION_NUMBER: (${{ steps.tag_version.outputs.new_tag }} | sed 's/[v]//g')
        with:
          version: ${{ env.VERSION_NUMBER }}
          assemblyVersion: ${{ env.VERSION_NUMBER }}
          fileVersion: ${{ env.VERSION_NUMBER }}
          informationalVersion: ${{ env.VERSION_NUMBER }}

      - name: Create the package
        run: dotnet pack -c Release -o out

      - name: Publish the package
        run: dotnet nuget push out/*.nupkg --skip-duplicate --api-key $API_KEY --no-symbols true

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.tag_version.outputs.changelog }}